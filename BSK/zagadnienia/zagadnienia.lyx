#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language polish
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\headheight 1cm
\headsep 1cm
\footskip 1cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Zagadnienia na egzamin z przedmiotu: Bezpieczeństwo Systemów Komputerowych,
 sem.
 7
\end_layout

\begin_layout Section
Cechy trybów pracy szyfrów blokowych: ECB, CBC, CFB, OFB.
 
\end_layout

\begin_layout Subsection
ECB - Tryb elektronicznej książki kodowej (
\lang english
electronic code book
\lang polish
).
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename Ecb_encryption.png
	scale 50
	groupId diagram

\end_inset


\begin_inset Graphics
	filename Ecb_decryption.png
	scale 50
	groupId diagram

\end_inset


\end_layout

\begin_layout Itemize
zależny od bloku informacji,
\end_layout

\begin_layout Itemize
umożliwia dwa poważne ataki
\end_layout

\begin_deeper
\begin_layout Itemize
Nagłówki stereotypowe i zakończenia stereotypowe - Podatność na ataki jest
 największa na początku i końcu wiadomości, gdzie występują dobrze zdefiniowane
 nagłówki i stopki zawierają informacje o nadawcy, odbiorcy, dacie, itp.
\end_layout

\begin_layout Itemize
Powtórzenie bloku - Przeciwnik może zmodyfikować zaszyfrowaną wiadomość
 bez znajomości klucza (lub nawet szczegółów działania algorytmu) w ten
 sposób, aby wyprowadzić w pole zamierzonego odbiorcę.
\end_layout

\end_deeper
\begin_layout Itemize
błędy: propagacja w obrębie jednego bloku.
\end_layout

\begin_layout Itemize
zastosowania: ograniczone - tam, gdzie stosujemy tylko 1-2 bloki informacji,
 np.
 szyfrowanie kluczy.
\end_layout

\begin_layout Subsection
CBC - Tryb wiązania bloków zaszyfrowanych (
\lang english
cipher block chaining
\lang polish
)
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename Cbc_encryption.png
	scale 50
	groupId diagram

\end_inset


\begin_inset Graphics
	filename Cbc_decryption.png
	scale 50
	groupId diagram

\end_inset


\end_layout

\begin_layout Standard
Wykorzystuje sprzężenie zwrotne - wynik poprzedniego szyfrowania podawany
 na wejście kolejnego.
\end_layout

\begin_layout Itemize
by uniknąć pojawienia się tych samych początków informacji (nagłówki stereotypow
e) szyfruje się losowy ciąg zwany ciągiem początkowym, zmienną początkującą
 lub początkową wartością związania
\end_layout

\begin_layout Itemize
szyfrogram zależy od wszystkich poprzednich bloków tekstu jawnego
\end_layout

\begin_layout Itemize
propagacja błędów:
\end_layout

\begin_deeper
\begin_layout Itemize
pojedynczy błąd w bloku tekstu jawnego wpłynie na ten blok szyfrogramu i
 wszystkie kolejne bloki szyfrogramu jednak po odszyfrowaniu zostanie tylko
 oryginalny błąd
\end_layout

\begin_layout Itemize
pojedynczy błąd w szyfrogramie zmienia jeden blok i jeden bit odtworzonego
 tekstu jawnego
\end_layout

\begin_layout Itemize
bloki występujące po drugim nie zawierają wpływu błędu, tak więc tryb CBC
 jest samo-odtwarzający
\end_layout

\end_deeper
\begin_layout Itemize
odszyfrowanie wymaga znajomości poprzedniego bloku szyfrogramu
\end_layout

\begin_layout Itemize
jest to standardowy tryb wszystkich prawie protokołów
\end_layout

\begin_layout Subsection
CFB
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename Cfb_encryption.png
	scale 50
	groupId diagram

\end_inset


\begin_inset Graphics
	filename Cfb_decryption.png
	scale 50
	groupId diagram

\end_inset


\end_layout

\begin_layout Standard
Często stosowany w trybie sprzężenia zwrotnego szyfrogramu gdzie dane są
 szyfrowane w jednostkach mniejszych niż rozmiar bloku.
\end_layout

\begin_layout Itemize
szyfrogram zależy od wszystkich poprzednich bloków tekstu jawnego
\end_layout

\begin_layout Itemize
należy stosować IV w celu ukrycia typowych początków
\end_layout

\begin_layout Itemize
propagacja błędów:
\end_layout

\begin_deeper
\begin_layout Itemize
pojedynczy błąd w bloku tekstu jawnego wpłynie na ten blok szyfrogramu i
 wszystkie kolejne bloki szyfrogramu jednak po odszyfrowaniu zostanie tylko
 oryginalny błąd
\end_layout

\begin_layout Itemize
błąd pojawi się w rejestrze przesuwnym, gdzie powoduje zniekształcenie szyfrogra
mu tak długo, aż przesunie się do drugiego końca rejestru.
 W 8-bitowym trybie CFB pojedynczy błąd zniekształca łącznie 9 bitów szyfrogramu
\end_layout

\begin_layout Itemize
po tych błędach system powraca do stanu normalnego - jest samo-odtwarzający
\end_layout

\end_deeper
\begin_layout Itemize
pracuje jedynie jako szyfrator przy szyfrowaniu, jak i odszyfrowaniu
\end_layout

\begin_layout Itemize
dla mniejszych pod-bloków pracuje dłużej
\end_layout

\begin_layout Itemize
ma własności samo synchronizujące - po n bitach.
 Dla j=1 nie wymaga żadnej synchronizacji – samo synchronizujący szyfr strumieni
owy!!!
\end_layout

\begin_layout Subsection
OFB
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename Ofb_encryption.png
	scale 50
	groupId diagram

\end_inset


\begin_inset Graphics
	filename Ofb_decryption.png
	scale 50
	groupId diagram

\end_inset


\end_layout

\begin_layout Standard
Tryb sprzężenia zwrotnego wyjściowego - dane dla następnego bloku pobierane
 bezpośrednio z szyfratora.
 Ta metoda nosi niekiedy nazwę trybu wewnętrznego sprzężenia zwrotnego,
 ponieważ mechanizm sprzężenia zwrotnego jest niezależny od zarówno strumieni
 tekstu jawnego jak i szyfrogramu.
\end_layout

\begin_layout Itemize
brak powiązania kolejnych bloków tekstu jawnego
\end_layout

\begin_layout Itemize
należy stosować IV w celu ukrycia typowych początków
\end_layout

\begin_layout Itemize
propagacja błędów:
\end_layout

\begin_deeper
\begin_layout Itemize
brak
\end_layout

\begin_layout Itemize
pojedynczy błąd jedno-bitowy w szyfrogramie powoduje pojedynczy błąd bitowy
 w odtworzonym tekście jawnym
\end_layout

\begin_layout Itemize
fatalne skutki ma utrata synchronizacji
\end_layout

\end_deeper
\begin_layout Itemize
pracuje jedynie jako szyfrator przy szyfrowaniu, jak i odszyfrowaniu
\end_layout

\begin_layout Itemize
dla mniejszych pod-bloków pracuje dłużej
\end_layout

\begin_layout Itemize
strumień klucza niezależny od wiadomości - może być wcześniej wyliczony
\end_layout

\begin_layout Itemize
Problemy ochrony związane z trybem OFB:
\end_layout

\begin_deeper
\begin_layout Itemize
OFB powinien być używany jedynie wtedy, kiedy rozmiar sprzężenia zwrotnego
 jest taki sam co rozmiar bloku
\end_layout

\end_deeper
\begin_layout Section
Porównaj konstrukcje szyfrów blokowych SPN i FN, uwzględniając: szyfrowanie,
 odszyfrowanie, liczbę rund.
 
\end_layout

\begin_layout Subsection
Sieć permutacyjno-podstawieniowa (SPN)
\begin_inset Foot
status open

\begin_layout Plain Layout
http://en.wikipedia.org/wiki/Substitution-permutation_network
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Sieć permutacyjno-podstawieniowa (
\lang english
Substitution-permutation network
\lang polish
) to seria połączonych matematycznych operacji użytych w szyfrach blokowych
 takich jak AES.
\end_layout

\begin_layout Standard
Składają się z zestawu naprzemiennie stosowanych rund lub warstw składających
 się z bloków zastępujących (
\lang english
substitution boxes - S-boxes
\lang polish
) i permutacyjnych (
\lang english
permutation boxes - P-boxes
\lang polish
).
 Bloki te transformują bloki bitów wejściowych na bloki bitów wyjściowych.
 Zazwyczaj klucz jest indukowany w każdej rundzie, często stosowane są klucze
 generowane z klucza głównego.
 W niektórych projektach klucze konfigurują bloki.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename 360px-SubstitutionPermutationNetwork2.png
	scale 50
	groupId diagram

\end_inset


\end_layout

\begin_layout Subsubsection
S-skrzynka - skrzynki podstawieniowe
\end_layout

\begin_layout Standard
Zastępuje blok bitów wejściowych na blok bitów wyjściowych w układzie jeden-do-j
eden tak by operacja była odwracalna (rozszyfrowywanie).
 
\end_layout

\begin_layout Standard
Bloki te są tak projektowane by zmiana jednego bitu na wejściu zmieniła
 wartość co najmniej połowy bitów wyjściowych a wartość pojedynczego bitu
 wyjściowego zależy od wartości wszystkich bitów wejściowych.
\end_layout

\begin_layout Subsubsection
P-skrzynka
\end_layout

\begin_layout Standard
Blok ten dokonuje permutacji bitów wejściowych tak by bity z jednego bloku
 S-box trafiły do jak największej ilości bloków S-box w następnej rundzie.
\end_layout

\begin_layout Subsubsection
Indukcja klucza
\end_layout

\begin_layout Standard
Typowo po każdej rundzie indukowany jest klucz (jego część lub wygenerowany
 na jego podstawie pod-klucz) za pomocą operacji matematycznej - najczęściej
 XOR.
\end_layout

\begin_layout Subsubsection
Zalety
\end_layout

\begin_layout Standard
Blokowa konstrukcja umożliwia wykonywanie operacji równolegle na wielu procesora
ch.
\end_layout

\begin_layout Subsection
Sieć Feistela (FN)
\end_layout

\begin_layout Standard
Sieć Feistela jest to symetryczna konstrukcja ułatwiająca budowę blokowych
 algorytmów szyfrowania.
 Pozwala na szyfrowanie i deszyfrowanie informacji tym samym algorytmem,
 mimo iż funkcja nie jest odwracalna.
 Sieć Feistela generuje z tekstu jawnego szyfrogram, a z szyfrogramu tekst
 jawny.
 W ten sposób konstruowanie algorytmów szyfrujących znacznie się uprościło,
 ponieważ nie trzeba się troszczyć o odwracalność funkcji .
 
\end_layout

\begin_layout Standard
Tekst jawny dzieli się na dwa równe bloki , .
 Funkcja jest właściwym algorytmem szyfrującym.
 Jako wynik otrzymuje się szyfrogram.
 Numer kolejnej rundy oznaczany jest indeksem ; to oznacza iż wynik szyfrowania
 jest ponownie-krotnie szyfrowany, co polepsza jakość szyfrowania.
 
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename Feistel_cipher_diagram_en.svg.png
	scale 50
	groupId diagram

\end_inset


\end_layout

\begin_layout Section
Co to jest, do czego służy certyfikat klucza publicznego i dlaczego ma tak
 istotne znaczenie? 
\end_layout

\begin_layout Standard
To podpisana przez poświadczającego (
\lang english
Certification Authority
\lang polish
) struktura danych zawierająca:
\end_layout

\begin_layout Itemize
klucz publiczny,
\end_layout

\begin_layout Itemize
identyfikator właściciela klucza,
\end_layout

\begin_layout Itemize
okres ważności,
\end_layout

\begin_layout Itemize
numer seryjny,
\end_layout

\begin_layout Itemize
dane wystawcy certyfikatu,
\end_layout

\begin_layout Itemize
informacje o algorytmie podpisu,
\end_layout

\begin_layout Itemize
podpis cyfrowy poświadczającego,
\end_layout

\begin_layout Itemize
ew.
 inne informacje.
\end_layout

\begin_layout Standard
Certyfikat klucza publicznego wykorzystuje podpis cyfrowy by połączyć klucz
 publiczny z podmiotem - np.
 imię i nazwisko osoby bądź nazwa organizacji, ich adres itp.
\end_layout

\begin_layout Standard
Sprawdzenie poprawności klucza (weryfikacja certyfikatu) wymaga znajomości
 klucza publicznego (certyfikatu) CA i zaufania do niego.
\end_layout

\begin_layout Section
Co to jest PKI i jaką pełni rolę? 
\end_layout

\begin_layout Standard
Zarządzanie kluczami (
\lang english
PKI - Public Key Infrastructure
\lang polish
) to zestaw sprzętu, oprogramowania, ludzi i procedur potrzebnych do tworzenia,
 zarządzania, dystrybucji, wykorzystania, przechowywania i unieważniania
 cyfrowych certyfikatów.
\end_layout

\begin_layout Standard
Obejmuje:
\end_layout

\begin_layout Itemize
wytwarzanie kluczy,
\end_layout

\begin_layout Itemize
poświadczanie (certyfikaty),
\end_layout

\begin_layout Itemize
uzgadnianie (ustanawianie), wymiana,
\end_layout

\begin_layout Itemize
stosowanie (dobór) i użytkowanie,
\end_layout

\begin_layout Itemize
przechowywanie, w tym przekazywanie TTP i organom prawnym (
\lang english
escrow
\lang polish
),
\end_layout

\begin_layout Itemize
niszczenie i unieważnianie.
\end_layout

\begin_layout Standard
PKI to infrastruktura pozwalająca na przypisanie klucza publicznego do podmiotu
 za pośrednictwem urzędów poświadczających klucze publiczne (CA).
\end_layout

\begin_layout Itemize
X.509
\end_layout

\begin_deeper
\begin_layout Itemize
hierarchiczny system urzędów certyfikujących (CA)
\end_layout

\begin_layout Itemize
tylko CA mogą podpisywać certyfikaty
\end_layout

\end_deeper
\begin_layout Itemize
PGP
\end_layout

\begin_deeper
\begin_layout Itemize
sieć zaufania (web of trust)
\end_layout

\begin_layout Itemize
wszyscy mogą podpisywać certyfikaty
\end_layout

\end_deeper
\begin_layout Section
Podaj krótko przebieg protokołów: podpisu elektronicznego oraz przesyłania
 wiadomości razem z kluczem szyfrującym.
 
\end_layout

\begin_layout Subsection
Podpis elektroniczny
\end_layout

\begin_layout Paragraph*
Tworzenie
\end_layout

\begin_layout Itemize
z wiadomości wyliczany jest skrót za pomocą funkcji skrótu
\end_layout

\begin_layout Itemize
tworzony jest podpis po przez zaszyfrowanie skrótu prywatnym kluczem nadawcy
 wiadomości
\end_layout

\begin_layout Paragraph*
Weryfikacja
\end_layout

\begin_layout Itemize
z otrzymanej wiadomości jest wyliczany skrót za pomocą funkcji skrótu
\end_layout

\begin_layout Itemize
załączony zaszyfrowany skrót jest rozszyfrowywany za pomocą publicznego
 klucza zawartego w certyfikacie
\end_layout

\begin_layout Itemize
wyliczony skrót jest porównany z rozszyfrowanym skrótem - jeżeli są identyczne
 wiadomość nie została zmieniona
\end_layout

\begin_layout Subsection
Przesyłanie wiadomości razem z kluczem szyfrującym
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename 575px-PGP_diagram.svg.png
	scale 50
	groupId diagram

\end_inset


\end_layout

\begin_layout Paragraph*
Szyfrowanie
\end_layout

\begin_layout Itemize
generowany jest losowy klucz
\end_layout

\begin_layout Itemize
dane są szyfrowane kluczem
\end_layout

\begin_layout Itemize
klucz jest szyfrowany kluczem publicznym
\end_layout

\begin_layout Itemize
zaszyfrowane dane oraz zaszyfrowany klucz stanowią wiadomość
\end_layout

\begin_layout Paragraph*
Rozszyfrowanie
\end_layout

\begin_layout Itemize
z wiadomości pobrany jest zaszyfrowany klucz
\end_layout

\begin_layout Itemize
klucz jest rozszyfrowany przy pomocy klucza prywatnego odbiorcy
\end_layout

\begin_layout Itemize
zaszyfrowane dane są rozszyfrowywane za pomocą rozszyfrowanego klucza
\end_layout

\begin_layout Section
Porównaj sposoby uwierzytelniania dokumentów z użyciem technik symetrycznych
 i asymetrycznych oraz z udziałem (lub bez udziału) TTP.
 
\end_layout

\begin_layout Subsection
Symetryczne 
\end_layout

\begin_layout Standard
Uwierzytelnianie w obrębie grupy osób, które sobie ufają.
 
\end_layout

\begin_layout Standard
Wiarygodność źródła jest zapewniana przez: 
\end_layout

\begin_layout Enumerate
Obliczenia skrótu poprzez: 
\end_layout

\begin_deeper
\begin_layout Itemize
MDC (funkcje skrótu bezkluczowe) - stosować funkcje dobrej jakości: SHA1,
 RIPEMD-160
\end_layout

\begin_layout Itemize
MAC (skrót tajny z kluczem K) – nie stosować tych samych kluczy do do MAC
 i szyfrowania danych 
\end_layout

\begin_layout Itemize
CBC-MAC 
\end_layout

\begin_layout Itemize
H-MAC 
\end_layout

\end_deeper
\begin_layout Enumerate
Kryptograficzną ochronę skrótu (utajnienie algorytmu skrótu, wartości skrótu,
 lub autentyczność wartości skrótu – podpis).
 
\end_layout

\begin_deeper
\begin_layout Enumerate
W MDC szyfr za pomocą klucza tajnego (współdzielonego przez grupę użytkowników
 lub użytkownika i TTP - może ocenić i zadecydować o ważności dokumentu).
 
\end_layout

\begin_layout Enumerate
Przy MAC może wystąpić dodatkowe szyfrowanie.
 Problem - duża liczba kluczy, ograniczone zastosowanie.
 
\end_layout

\begin_layout Enumerate
Z TTP strony współdzielą klucze z TTP.
 TTP odbiera szyfrogram od A, odszyfrowuje, szyfruje go ponownie kluczem
 współdzielonym z B i wysyła do B.
 
\end_layout

\begin_layout Enumerate
Bez TTP Strony współdzielą jeden wspólny klucz.
 
\end_layout

\end_deeper
\begin_layout Subsection
Asymetryczne (za pomocą certyfikatów)
\end_layout

\begin_layout Standard
Wykorzystanie pary kluczy: klucz prywatny (tajny) i publiczny.
\end_layout

\begin_layout Standard
Klucz publiczny może być przesłany za pośrednictwem kanałów niezabezpieczonych.
 
\end_layout

\begin_layout Standard
Szyfrowanie wiadomości odbywa się przy użyciu klucza publicznego, który
 jednak nie może posłużyć do jej odszyfrowania.
 Odszyfrowanie może nastąpić jedynie przy użyciu klucza prywatnego.
 
\end_layout

\begin_layout Standard
A wysyła do B: 
\end_layout

\begin_layout Enumerate
A pyta o klucz publiczny
\end_layout

\begin_layout Enumerate
B generuje parę kluczy: publiczny e i prywatny d
\end_layout

\begin_layout Enumerate
B wysyła klucz publiczny e dowolnym kanałem
\end_layout

\begin_layout Enumerate
A szyfruje wiadomość m przy użyciu klucza e i znanego powszechnie algorytmu
 E
\end_layout

\begin_layout Enumerate
A wysyła zaszyfrowaną wiadomość c = Ee(m) dowolnym kanałem
\end_layout

\begin_layout Enumerate
B odszyfrowuje wiadomość Ed(c) = m przy zastosowaniu swojego klucza prywatnego
 d 
\end_layout

\begin_layout Paragraph*
Z TTP 
\end_layout

\begin_layout Standard
CA potwierdza autentyczność certyfikatów komunikujących się stron.
 
\end_layout

\begin_layout Paragraph*
Bez TTP 
\end_layout

\begin_layout Standard
strony wymieniają się certyfikatami, muszą sobie wzajemnie ufać 
\end_layout

\begin_layout Standard
Zalety: Ilość kluczy jest zdecydowanie niższa niż w technikach symetrycznych
 Zarządzanie kluczami pozwala na obecność zaufanej trzeciej strony Nie trzeba
 wymieniać często kluczy Wady: Wolniejsze, duże klucze
\end_layout

\begin_layout Section
Scharakteryzuj typy i zadania zapór ogniowych.
\end_layout

\begin_layout Subsection
Typy zabór
\end_layout

\begin_layout Itemize
zapory bezkontekstowe - które stosują brutalną blokadę pakietów przychodzących
 z zewnątrz sieci korporacyjnej,
\end_layout

\begin_layout Itemize
zapory kontekstowe 
\end_layout

\begin_deeper
\begin_layout Itemize
identyfikacja źródła i przeznaczenia przesyłanej informacji,
\end_layout

\begin_layout Itemize
rozpoznawanie użytkowników sesji,
\end_layout

\begin_layout Itemize
przyjęcie bądź odrzucenie sesji zgodnie z przyjętymi zasadami,
\end_layout

\begin_layout Itemize
monitorowanie, śledzenie i alarmowanie,
\end_layout

\begin_layout Itemize
konwersja adresów sieciowych,
\end_layout

\begin_layout Itemize
szyfrowanie danych
\end_layout

\end_deeper
\begin_layout Itemize
bramy (
\lang english
gateways, proxy gateways
\lang polish
) - działają na poziomie aplikacji
\end_layout

\begin_layout Itemize
strażnicy (
\lang english
guards
\lang polish
)
\end_layout

\begin_layout Subsection
Zadania
\end_layout

\begin_layout Itemize
Filtrowanie pakietów, czyli sprawdzanie pochodzenia pakietów i akceptowanie
 pożądanych
\end_layout

\begin_layout Itemize
Zapory kontekstowe umożliwiają analizę zdarzeń i na tej podstawie budowę
 indywidualnych strategii zabezpieczeń dla wydzielonych fragmentów sieci
 wewnętrznej - Intranetu.
\end_layout

\begin_layout Itemize
Stosowanie algorytmów identyfikacji użytkownika (hasła, cyfrowe certyfikaty).
 
\end_layout

\begin_layout Itemize
Zabezpieczanie programów obsługujących niektóre protokoły (np.
 FTP, TELNET).
 
\end_layout

\begin_layout Itemize
Ważną funkcją zapory sieciowej jest monitorowanie ruchu sieciowego i zapisywanie
 najważniejszych zdarzeń do dziennika.
\end_layout

\begin_layout Section
Na czym polega analiza ryzyka względem kosztów i gdzie ją stosujemy w polityce
 bezpieczeństwa? 
\end_layout

\begin_layout Standard
Podczas badania ryzyka analizie podlega ważona ocena różnicy pomiędzy prawdopodo
bnymi stratami, a kosztem podjęcia środków zaradczych przeciwdziałających
 niechcianemu zdarzeniu.
\end_layout

\begin_layout Itemize
Krok 1 - Określenie zagrożeń, ich częstości i wielkości strat.
\end_layout

\begin_layout Itemize
Krok 2 – Wybór optymalnej strategii.
\end_layout

\begin_layout Paragraph*
Etapy realizacji PB
\end_layout

\begin_layout Enumerate
Planowanie PB,
\end_layout

\begin_layout Enumerate
Analiza ryzyka,
\end_layout

\begin_layout Enumerate
Analiza kosztów względem korzyści,
\end_layout

\begin_layout Enumerate
Tworzenie PB na miarę zapotrzebowań,
\end_layout

\begin_layout Enumerate
Wprowadzanie PB w życie.
\end_layout

\begin_layout Section
Opisz trzy polityki bezpieczeństwa w zarządzaniu personelem.
 
\end_layout

\begin_layout Enumerate
przed zatrudnieniem - np.
 badanie pochodzenia środowiskowego, podpisanie odpowiednio sformułowanej
 umowy przed podjęciem pracy
\end_layout

\begin_layout Enumerate
podczas pracy - szkolenia, budowa świadomości celów, izolacja i nadzór,
 wyodrębnienie postaci kluczowych oraz odstających od otoczenia, aspekty
 etyczne
\end_layout

\begin_layout Enumerate
po ustaniu zatrudnienia - np.
 zobowiązania do niepodejmowania pracy u konkurencji przez pewien czas –
 opłacony!!
\end_layout

\begin_layout Section
Scharakteryzuj poziomy dojrzałości zarządzania bezpieczeństwem.
\end_layout

\begin_layout Section
Co to jest audyt? Podaj rolę audytu w kontroli bezpieczeństwa.
 Wymień plan audytu i czynności audytora.
 
\end_layout

\begin_layout Standard
Wstępny audyt dotyczy obiektów, polityki personalnej, istniejących zabezpieczeń,
 aplikacji, odpowiedzialności wobec udziałowców i klientów, lokalnego społeczeńs
twa.
\end_layout

\begin_layout Section
Podaj cechy modeli kontroli dostępu: DAC, MAC, przejmij-przekaż, Wooda,
 Jajodhi-Sadhu, RBAC.
\end_layout

\begin_layout Paragraph*
DAC
\end_layout

\begin_layout Standard
określa podstawowe metody kontroli dostępu do obiektów w systemie plików.
 Administratorem uprawnień jest sysadmin lub właściciel obiektu (pliku).
 Rozbudowana wersją DAC jest model ACL – list kontroli dostępu.
\end_layout

\begin_layout Paragraph*
MAC
\end_layout

\begin_layout Standard
ochrania i zabezpiecza procesy, dane i urządzenia systemowe przed szkodliwym
 nadużyciem/wykorzystaniem za pomocą tzw.
 etykiet.
 Właściciel obiektu po jego utworzeniu może nie mieć prawa do późniejszego
 np.
 odczytu!
\end_layout

\begin_layout Paragraph*
RBAC
\end_layout

\begin_layout Standard
ogranicza dostęp do zasobów na podstawie roli, jaką użytkownik pełni w systemie.
 Przystosowany do organizacji, w której działa.
 Ukierunkowany na czynności użytkownika.
 Może wykorzystywać DAC, MAC i inne modele.
\end_layout

\begin_layout Paragraph*
przejmij - przekaż
\end_layout

\begin_layout Itemize
Rozszerzenie modelu macierzowego (DAC) – ujmuje kwestie delegacji i przejmowania
 uprawnień.
\end_layout

\begin_layout Itemize
Informacja o uprawnieniach jest pamiętana w postaci grafu, który opisuje
 wszystkie powiązania dot.
 przepływu informacji.
\end_layout

\begin_layout Itemize
Podmiot ma (w tym modelu!) uprawnienia do obiektu albo innego podmiotu.
\end_layout

\begin_deeper
\begin_layout Itemize
Przekaż - podmiot x przekazuje uprawnienie h, jakie ma do z (obiektu lub
 podmiotu), obiektowi lub podmiotowi y pod warunkiem, że x ma uprawnienie
 g do przekazywania uprawnień.
\end_layout

\begin_layout Itemize
Przejmij - podmiot x przekazuje uprawnienie h (pozbywając się uprawnienia
 h do obiektu z), jakie ma do z (obiektu lub podmiotu), obiektowi lub podmiotowi
 y pod warunkiem, że y ma uprawnienie t do przejęcia uprawnień.
\end_layout

\end_deeper
\begin_layout Paragraph*
Wooda
\end_layout

\begin_layout Standard
Skierowany na realizację polityki bezpieczeństwa w środowisku baz danych.
\end_layout

\begin_layout Itemize
poziomy
\end_layout

\begin_deeper
\begin_layout Itemize
Zewnętrzny,
\end_layout

\begin_layout Itemize
Konceptualny,
\end_layout

\begin_layout Itemize
Wewnętrzny.
\end_layout

\end_deeper
\begin_layout Itemize
podmioty to:
\end_layout

\begin_deeper
\begin_layout Itemize
Użytkownicy,
\end_layout

\begin_layout Itemize
administratorzy uprawnień.
\end_layout

\end_deeper
\begin_layout Itemize
obiekty to 
\end_layout

\begin_deeper
\begin_layout Itemize
tablice bazy danych
\end_layout

\begin_layout Itemize
kolumny tablic
\end_layout

\begin_layout Itemize
tablice wirtualne (widoki)
\end_layout

\begin_layout Itemize
ew.
 funkcje.
\end_layout

\end_deeper
\begin_layout Itemize
Dla poziomu zewnętrznego i konceptualnego są definiowane reguły dostępu,
 które muszą być niesprzeczne.
\end_layout

\begin_layout Paragraph*
Jajodhi-Sadhu
\end_layout

\begin_layout Standard
Kontrola dostępu MAC dla baz danych.
\end_layout

\begin_layout Itemize
Do modelu relacyjnego są wprowadzone atrybuty klasyfikacyjne zw.
 etykietami bezpieczeństwa: jawny < poufny < tajny < ściśle tajny
\end_layout

\begin_layout Itemize
Schemat relacyjny wielopoziomowy: Każdy atrybut oprócz wartości ma nadany
 atrybut klasyfikacyjny, a ponadto cała krotka ma również taki atrybut.
\end_layout

\begin_layout Itemize
Polityka bezpieczeństwa to kontrola dostępu do realizacji operacji typu
 dołącz, aktualizuj, usuń na relacjach wielopoziomowych.
\end_layout

\begin_layout Section
Charakterystyka typów systemów IDS.
 Dlaczego nie są w pełni skuteczne? 
\end_layout

\begin_layout Subsection
Klasyfikacja systemów wykrywania 
\end_layout

\begin_layout Paragraph*
pod kątem sposobu przetwarzania informacji
\end_layout

\begin_layout Itemize
statystyczne (progowe- nieefektywne i trudne w realizacji, ukierunkowane
 - metryki (liczba loginów, wielkość i częstość przerw w pracy, intensywność
 korzystania z zasobów));
\end_layout

\begin_layout Itemize
związane z funkcją, sposobem działania użytkownika (wykrywanie anomalii
 w zachowaniu - w oparciu o historię, wzorce zachowań itp., wykrywanie ataków
 - wymaga ich wcześniejszej identyfikacji cech, dróg co jest dużą trudnością)
 ,
\end_layout

\begin_layout Itemize
modele sieci neuronowych (wykrywanie anomalii w zachowaniu się komputera
 i ludzi na podstawie różnorodnych modeli wzorców zachowania się (ludzi
 i systemów i wykrywania odchyleń od ich),
\end_layout

\begin_layout Itemize
modele oparte o algorytmy genetyczne.
\end_layout

\begin_layout Paragraph*
z punktu widzenia zasady działania:
\end_layout

\begin_layout Itemize
wykrywanie zagrożenia na podstawie stwierdzenia obecności charakterystycznych
 cech ataku – detekcja tzw.
 sygnaturowa,
\end_layout

\begin_layout Itemize
wykrywanie zagrożenia na podstawie zmian w tzw.
 normalnym zachowaniu się systemu (wykrywanie anomalii w „szumie”).
\end_layout

\begin_layout Paragraph*
inna klasyfikacja:
\end_layout

\begin_layout Itemize
IDS sieciowe (operujące na segmentach sieci),
\end_layout

\begin_layout Itemize
IDS serwera (działające na rzecz wybranego serwera).
\end_layout

\begin_layout Subsection
Cele
\end_layout

\begin_layout Itemize
głównym zadaniem jest monitorowanie sieci lub serwera w celu wykrycia jakiejkolw
iek próby przełamania zabezpieczeń
\end_layout

\begin_layout Itemize
rozróżnienie objawów napaści, aby poprawnie zidentyfikować wszystkie rzeczywiste
 ataki przy jednoczesnym braku fałszywych alarmów
\end_layout

\begin_layout Subsection
Problemy ze skutecznością
\end_layout

\begin_layout Standard
Kluczowy problem związany z zaprojektowaniem IDS to takie ustawienie „czułości”
 systemu, by wyeliminować fałszywe alarmy jednocześnie nie upośledzając
 funkcji detekcyjnych.
\end_layout

\begin_layout Paragraph*
IDS sygnaturowe
\end_layout

\begin_layout Itemize
aby system mógł działać, musi znać dokładny opis każdego ataku (wzorzec).
\end_layout

\begin_layout Itemize
złożoność takich ataków zmienia się,
\end_layout

\begin_layout Itemize
powstają nowe typy zagrożeń, dotychczas nie zidentyfikowane i nie opisane.
\end_layout

\begin_layout Itemize
jeśli zdarzenie nie mające charakteru zagrożenia daje taki sam obraz jak
 pewne zagrożenie, to wówczas będzie wzbudzony fałszywy alarm.
\end_layout

\begin_layout Paragraph*
IDS wykrywające anomalie
\end_layout

\begin_layout Itemize
duża trudność lub niekiedy niemożność określenia cech charakterystycznych
 takiego normalnego stanu systemu,
\end_layout

\begin_layout Itemize
system musi uczyć się normalnego zachowania się systemu wraz z jego fluktuacjami
, bo inaczej normalne zachowanie może być potraktowane błędnie jako atak.
\end_layout

\begin_layout Section
Porównaj sposoby zabezpieczania poczty elektronicznej.
 
\end_layout

\begin_layout Enumerate
zaufanie
\end_layout

\begin_deeper
\begin_layout Enumerate
PGP - sieciowa dystrybucja zaufania
\end_layout

\begin_layout Enumerate
PEM - hierarchiczna dystrybucja kluczy
\end_layout

\end_deeper
\begin_layout Enumerate
Zastosowania docelowe
\end_layout

\begin_deeper
\begin_layout Enumerate
PGP - Zaprojektowano do ochrony poczty elektronicznej, ale także jest bardzo
 użyteczny do zabezpieczania wybranych plików.
 Prywatność uważa się za co najmniej równie ważną jak uwierzytelnianie.
\end_layout

\begin_layout Enumerate
PEM - zawsze projektowano specyficznie do pracy z pocztą elektroniczną.
 Uwierzytelnianie jest ważniejsze od prywatności (nie jest możliwe wysłanie
 wiadomości PEM, która nie jest podpisana).
\end_layout

\end_deeper
\begin_layout Enumerate
Szyfrowanie
\end_layout

\begin_deeper
\begin_layout Enumerate
PGP - może pod-pisać wiadomość nieszyfrowaną; może szyfrować wiadomości
 niepodpisane
\end_layout

\begin_layout Enumerate
PEM - może podpisać wiadomość nieszyfrowaną; nie jest możliwe wysłanie wiadomośc
i, która jest nie podpisana
\end_layout

\end_deeper
\begin_layout Enumerate
Wytwarzanie kluczy
\end_layout

\begin_deeper
\begin_layout Enumerate
PGP - Użytkownik wytwarza swoją własną parę kluczy
\end_layout

\begin_layout Enumerate
PEM - Certyfikaty według standardu X.509 są wytwarzane przez użytkownika
\end_layout

\end_deeper
\begin_layout Enumerate
Ukrywanie info o podpisie
\end_layout

\begin_deeper
\begin_layout Enumerate
PGP - Niemożliwe jest sprawdzenie podpisu PGP, jeżeli wiadomość jest nadal
 zaszyfrowana
\end_layout

\begin_layout Enumerate
PEM - Możliwe jest sprawdzenie podpisu PEM, nawet jeśli wiadomość jest szyfrowan
a
\end_layout

\end_deeper
\begin_layout Enumerate
Dystrybucja kluczy
\end_layout

\begin_deeper
\begin_layout Enumerate
PGP - Klucze jawne PGP typowo rozprowadza się pocztą elektroniczną, za pomocą
 sieciowych biuletynów informacyjnych lub serwerów kluczy opartych na poczcie
 elektronicznej.
 W celu przeciwdziałania sabotażom klucze są podpisywane przez trzecie strony
 - innych użytkowników.
\end_layout

\begin_layout Enumerate
PEM - CA jest obdarzoną powszechnym zaufaniem (TTP) bazą kluczy jawnych.
 Klucze jawne PEM mogą być rozprowadzane za pomocą dowolnych środków, zwykle
 pocztą elektroniczną lub za pomocą przeglądania katalogów zbudowanych w
 oparciu o standard X.500.
\end_layout

\end_deeper
\begin_layout Enumerate
Unieważnianie kluczy
\end_layout

\begin_deeper
\begin_layout Enumerate
PGP - Dystrybucja kluczy jest doraźna i w znacznej części na drodze ustnej.
 W tej sytuacji niemożliwe jest zagwarantowanie unieważnienia certyfikatu,
 jeżeli jest on skompromitowany.
\end_layout

\begin_layout Enumerate
PEM - Listy unieważnień certyfikatów (CRL) są zachowane w katalogach typu
 X.500 lub w skrzynkach pocztowych utrzymywanych przez każdy urząd typu PCA
\end_layout

\end_deeper
\begin_layout Section
Jakie cechy techniczne ma dobry protokół uwierzytelniania? 
\end_layout

\begin_layout Standard
Dobry protokół uwierzytelniania wykorzystuje:
\end_layout

\begin_layout Itemize
losowe liczby
\end_layout

\begin_deeper
\begin_layout Itemize
aktor generuje losową liczbę i zapamiętuje jej wartość
\end_layout

\begin_layout Itemize
liczba ta przesyłana bądź odbierana w formie zaszyfrowanej
\end_layout

\begin_layout Itemize
weryfikuje wartość tej liczby po otrzymaniu ją wraz z wiadomością zwrotną
\end_layout

\begin_layout Itemize
zapobiega to atakom powtórzeniowym
\end_layout

\end_deeper
\begin_layout Itemize
znaczniki czasu
\end_layout

\begin_deeper
\begin_layout Itemize
weryfikowany przez agenta który go wygenerował
\end_layout

\begin_layout Itemize
nie wymaga synchronizacji zegarów
\end_layout

\begin_layout Itemize
zapobiega atakom bazującym na wykorzystaniu 
\begin_inset Quotes eld
\end_inset

starych
\begin_inset Quotes erd
\end_inset

 wiadomości
\end_layout

\end_deeper
\begin_layout Itemize
wykorzystanie sekretu
\end_layout

\begin_deeper
\begin_layout Itemize
zapobiega przed atakiem z wnętrza systemu
\end_layout

\end_deeper
\begin_layout Section
Na czym polega dowód o wiedzy zerowej? Podaj jego techniczne elementy.
 
\end_layout

\begin_layout Standard
Celem protokołu jest uwierzytelnienie się podmiotu A przez wykazanie się
 znajomością sekretu S (Związanego z A za pomocą autentycznych, publicznie
 dostępnych danych) wobec każdego podmiotu weryfikującego B, bez ujawniania
 żadnych informacji o S nieznanych podmiotowi B lub możliwych do obliczenia
 przez niego jeszcze przed wykonaniem protokołu.
 Bezpieczeństwo jest oparte na trudności obliczenia pierwiastka kwadratowego
 Modulo duża złożona liczba całkowita B o nieznanym rozkładzie na czynniki
 pierwsze.
 
\end_layout

\begin_layout Section
Czy protokół Kerberos jest bezpieczny? Uzasadnij swoją odpowiedź.
 
\begin_inset Foot
status open

\begin_layout Plain Layout
http://en.wikipedia.org/wiki/Kerberos_(protocol)
\end_layout

\end_inset


\end_layout

\begin_layout Paragraph*
Wykorzystane elementy
\end_layout

\begin_layout Itemize
znacznik czasu - zapobiega atakom bazującym na wykorzystaniu 
\begin_inset Quotes eld
\end_inset

starych
\begin_inset Quotes erd
\end_inset

 wiadomości
\end_layout

\begin_layout Itemize
sekret - klient używa hasła do wygenerowania klucza służącego do rozszyfrowania
 klucza sesyjnego (hasło nigdy nie jest przesyłane); serwer TGS współdzieli
 tajny klucz z każdym z serwisów
\end_layout

\begin_layout Itemize
losowe liczby - klient weryfikuje znajomość znacznika czasowego przez serwis,
 który musiał go rozszyfrować kluczem sesji zaszyfrowanym współdzielonym
 kluczem z TGS
\end_layout

\begin_layout Itemize
dokonane jest uwierzytelnienie wszystkich aktorów systemu:
\end_layout

\begin_deeper
\begin_layout Itemize
AS względem klienta i na odwrót - AS i użytkownik weryfikowani przez znajomość
 hasła użytkownika bez przesyłania tego hasła
\end_layout

\begin_layout Itemize
serwis względem TGS - TGS i serwer znają ten sam klucz który jest używany
 do rozszyfrowania przez serwis klucza sesyjnego z użytkownikiem
\end_layout

\begin_layout Itemize
serwis względem klienta - serwis po rozszyfrowaniu klucza sesji oraz znacznika
 czasowego klienta zwiększa jego wartość i wysyła go po zaszyfrowaniu kluczem
 sesji - klient weryfikuje prawidłowość znacznika czasu
\end_layout

\begin_layout Itemize
klient względem serwisu - TGS i klient znają wspólny klucz sesji który umożliwi
 im dalszą komunikację
\end_layout

\end_deeper
\begin_layout Itemize
dokonana jest autoryzacja klienta do skorzystania z serwisu przez TGS
\end_layout

\begin_deeper
\begin_layout Itemize
TGS wystawia bilet umożliwiający serwisowi rozszyfrowanie klucza sesyjnego
 z klientem
\end_layout

\end_deeper
\begin_layout Paragraph*
Wady
\end_layout

\begin_layout Standard
Włamanie się na centralny serwer może umożliwić włamywaczowi podszycie się
 za dowolnego użytkownika.
\end_layout

\begin_layout Paragraph*
Uzasadnienie
\end_layout

\begin_layout Standard
System ten wykorzystuje wszystkie elementy potrzebne do uniknięcia podstawowych
 metod ataku.
 Dodatkowo każdy aktor jest uwierzytelniany a klient jest autoryzowany do
 skorzystania z serwisu w sposób kryptograficzny.
 Serwer AS musi być specjalnie chroniony przed włamaniami i stanowi centralny
 punkt którego awaria lub włamanie uniemożliwia użytkownikom korzystanie
 z serwisów.
 
\end_layout

\begin_layout Standard
System ten jest bezpieczny tak bardzo jak bezpieczny jest serwer AS.
\end_layout

\begin_layout Section
Jak zapewniamy bezpieczeństwo platform obliczeniowych? 
\end_layout

\begin_layout Standard
Działania związane z zabezpieczeniem platform systemów operacyjnych można
 podzielić na 4 grupy:
\end_layout

\begin_layout Itemize
Środki organizacyjne
\end_layout

\begin_layout Itemize
Bezpieczeństwo fizyczne
\end_layout

\begin_layout Itemize
Bezpieczeństwo lokalne
\end_layout

\begin_layout Itemize
Bezpieczeństwo sieciowe
\end_layout

\begin_layout Section
Opisz 4 etapy zabezpieczania serwisów www.
\end_layout

\begin_layout Standard
Z logicznego punktu widzenia zabezpieczenia serwera WWW i pracującej na
 nim aplikacji można pogrupować pod względem umiejscowienia w systemie na
 cztery grupy:
\end_layout

\begin_layout Itemize
zabezpieczenia na poziomie aplikacji WWW - np.
 weryfikowanie użytkowników,
\end_layout

\begin_layout Itemize
zabezpieczenia realizowane przez serwer WWW - np.
 odpowiednia konfiguracja blokująca dostęp do źródeł,
\end_layout

\begin_layout Itemize
zabezpieczenia realizowane przez system - zapora ogniowa, chroot, tylko
 niezbędne usługi.
\end_layout

\begin_layout Itemize
Bezpieczeństwo fizyczne serwera - dostęp do pomieszczenia z komputerem.
\end_layout

\begin_layout Section
Jak wygląda podwójny podpis cyfrowy i gdzie jest stosowany? 
\end_layout

\begin_layout Standard
Informacje o m1-zamówieniu, m2-płatności.
 Podwójny podpis składa się ze skrótów MD1=(H(m1) i MD2=H(m2), skrótu konkatenac
ji MD1 i MD2 MDpow=H(concat(MD1,MD2)) podpisanych przez Alice za pomocą
 jej klucza prywatnego.
 Alice wysyła do Boba (m1|m2)a=[m1,MD2,MDpow,K'a(MDpow)].
 Umożliwi to Bobowi uwierzytelnienie Alice i sprawdzenie, że złożyła podpis
 pod całym komunikatem.
 Bobowi nie uda się jednak przeczytać m2.
 
\end_layout

\begin_layout Section
Na czym polega bezpieczeństwo notariusza cyfrowego? Wymień 4 elementy i
 krótko uzasadnij.
 
\end_layout

\begin_layout Standard
Bezpieczeństwo notariatu opiera się na podpisie złożonym przez zaufaną instytucj
ę, stwierdzającym, że dany dokument rzeczywiście istniał o danym czasie
 i na braku możliwości zafałszowania informacji o dacie, zmiany treści,
 czy przeniesienia podpisu na inny dokument.
 
\end_layout

\begin_layout Itemize
Użytkownik wysyła skrót wiadomości do notariatu cyfrowego.
 
\end_layout

\begin_layout Itemize
Na serwerze notariatu gromadzone są skróty dokumentów przesłane w tej samej
 sekundzie od różnych klientów.
 
\end_layout

\begin_layout Itemize
Na ich podstawie budowany jest łączny skrót wielu dokumentów z tej samej
 sekundy, ten dodawany jest do sumy skrótów bazowych w tzw Super skrót bazowy
 (SHV - 
\lang english
super hash value
\lang polish
) z poprzedniej sekundy dając nowy skrót dla danej sekundy.
 
\end_layout

\begin_layout Itemize
Takie rozwiązanie daje powiązanie skrótu danego dokumentu z wszystkimi innymi
 dokumentami z danej chwili i z poprzednimi poświadczeniami dokumentów.
 
\end_layout

\begin_layout Itemize
W każdej następnej chwili dołączane są kolejne skróty, dając w ten sposób
 umiejscowienie skrótu wśród innych tego rodzaju „odcisków palca”.
 
\end_layout

\begin_layout Itemize
Zwrotnie użytkownik otrzymuje poświadczenie zarejestrowania skrótu i certyfikat
 dokumentu (Serwer nie może ich zmieniać) skróty są gromadzone w centralnym
 rejestrze i publikowane za pomocą różnych środków.
 
\end_layout

\begin_layout Subsection
Elementy
\end_layout

\begin_layout Enumerate
dokument i jego skrót
\end_layout

\begin_layout Enumerate
serwer obliczający 
\lang english
root hash
\lang polish
 (
\lang english
hash
\lang polish
 hashy dokumentów z danej sekundy) i SHV (
\lang english
Super Hash Value
\lang polish
 - 
\lang english
root hash
\lang polish
 i SHV z poprzedniej sekundy)
\end_layout

\begin_layout Enumerate
certyfikat dokumentu - potwierdza zarejestrowanie skrótu dokumentu w systemie
\end_layout

\begin_layout Enumerate
publikacja SHV za pomocą różnych środków
\end_layout

\begin_layout Subsection
Elementy
\end_layout

\begin_layout Enumerate
Powiązanie z innymi dokumentami
\end_layout

\begin_layout Enumerate
Umiejscowienie w czasie
\end_layout

\begin_layout Enumerate
Powiązany z całą historią skrótów
\end_layout

\begin_layout Enumerate
Masowa publikacja
\end_layout

\begin_layout Subsection
Uzasadnienie
\end_layout

\begin_layout Standard
Zmiana dokumentu wymagała by przeliczenia wszystkich skrótów wystawionych
 do chwili obecnej oraz zmiany wszystkich opublikowanych wartości SHV po
 zgłoszeniu oryginalnego dokumentu.
\end_layout

\begin_layout Section
Co to jest protokół łączący? Dlaczego i gdzie go stosujemy.
 Podaj przykład.
 
\end_layout

\begin_layout Standard
Umożliwia jedno lub dwustronną wymianę informacji pomiędzy serwerami.
 
\end_layout

\begin_layout Standard
Od sposobu połączenia zależą więc możliwości wykorzystania informacji o
 sieciach z wielu lokalizacji.
 Dzięki możliwości łączenia serwerów, możliwa jest rozbudowa systemu do
 skali obejmującej wiele urządzeń rozproszonych na terenie całego kraju.
 
\end_layout

\begin_layout Standard
Powiązanie znacznika czasu Alice z wcześniej otrzymanymi znacznikami czasu.
\end_layout

\begin_layout Standard
Jeżeli A jest identyfikatorem Alice, skrót przeznaczony do opatrzenia znacznikie
m czasu to H i poprzedni znacznik to Tn-1, to wtedy protokół tak wygląda:
\end_layout

\begin_layout Enumerate
Alice przesyła Trentowi Hn i A.
\end_layout

\begin_layout Enumerate
Trent odsyła z powrotem do Alice: Tn=SK(n,A,Hn,Tn;IDn-1,Hn-1,Tn-1,H(IDn-1,Tn-1,H
n-1)) - SK wskazuje, że wiadomość jest podpisana przy użycia klucza prywatnego
 Trenta.
 Nazwa Alice identyfikuje ją jako źródło żądania.
 Parametr n wskazuje na sekwencję żądania.
 Parametr T, to czas.
 
\end_layout

\begin_layout Enumerate
Po ostemplowaniu następnego dokumentu Trent przesyła Alice identyfikator
 pochodzenia tego dokumentu i IDn+1 
\end_layout

\begin_layout Section
Co to jest SSL/TSL? Podaj krótką charakterystykę i części składowe.
 
\end_layout

\begin_layout Standard
Podstawowym zadaniem, które realizuje protokół SSL jest umożliwienie bezpiecznej
 wymiany informacji i danych pomiędzy komunikującymi się serwerem i klientem,
 wykorzystując do tego niezabezpieczone łącze.
\end_layout

\begin_layout Paragraph*
Mechanizmy zaimplementowane w protokole SSL:
\end_layout

\begin_layout Itemize
szyfrują przesyłane dane,
\end_layout

\begin_layout Itemize
a także zabezpieczają je przed zmianami (zapewniają integralność),
\end_layout

\begin_layout Itemize
uwierzytelniają także komputery biorące udział w transmisji.
\end_layout

\begin_layout Paragraph*
SSL jest zbudowany z czterech pod-protokołów:
\end_layout

\begin_layout Itemize

\lang english
SSL record protocol,
\end_layout

\begin_layout Itemize

\lang english
SSL handshake protocol,
\end_layout

\begin_layout Itemize

\lang english
SSL Alert protocol,
\end_layout

\begin_layout Itemize

\lang english
SSL cipher change protocol.
\end_layout

\begin_layout Section
Jak przebiega atak typu Distributed D-o-S? Podaj aktorów i fazy ataku.
\end_layout

\begin_layout Subsection
Ataki DoS/DDoS mają dwa typy ofiar
\end_layout

\begin_layout Enumerate
docelowa ofiara i 
\end_layout

\begin_layout Enumerate
pośredniczące systemy, na których działają exploity I demony atakującego.
\end_layout

\begin_layout Enumerate
administrator sieci botnet
\end_layout

\begin_layout Subsection
Fazy ataku DDoS:
\end_layout

\begin_layout Enumerate
Intruz wynajduje jeden lub więcej systemów w Internecie takich, że mogą
 dać się skompromitować i zainstalować exploity intruza.
 Najczęściej wykorzystuje do tego celu wykradzione dane legalnego użytkownika,
 wybierając przy tym systemy z szerokopasmowym dostępem, np.
 węzły akademickie.
 
\end_layout

\begin_layout Enumerate
Na skompromitowany system ładuje dowolną liczbę narzędzi hakerskich (np.
 skanery, wykrywacze typu SO, programy Dos/DDoS).
 Taki system staje się Masterem, który rozpoczyna poszukiwanie innych systemów
 możliwych do skompromitowania.
 Przeszukuje także systemy w sieci lokalnej pod katem uruchomionych usług,
 wynajdując te z podatnościami (masowe wnikanie).
 Automatyczne narzędzie do tej kompromitacji systemów nie są częścią narzędzi
 DDoS, ale pochodzą najczęściej od innych grup hakerów.
 Te skompromitowane systemy stają się początkowymi ofiarami DDoS – zostają
 na nich uruchomione demony DDoS przeprowadzające właściwy atak.
 
\end_layout

\begin_layout Enumerate
Intruz dysponuje listą „posiadanych” systemów z demonami DDoS.
 Właściwa faza DDoS zaczyna się, gdy na systemie Master zostaje uruchomiony
 program, który komunikuje się z demonami, wydając polecenie rozpoczęcia
 ataku.
 Tę komunikację można tak ukryć, że staje się trudna do wykrycia, aczkolwiek
 istnieją pewne dowody na to, występuje.
 W większości przypadków administratorzy zaatakowanych systemów (demonów)
 nawet nie podejrzewają, że demony DDoS w nich działają.
 Nawet zostaną one zlokalizowane i usunięte, to nie można określić, gdzie
 jeszcze znajduje się takie oprogramowanie.
 
\end_layout

\end_body
\end_document
